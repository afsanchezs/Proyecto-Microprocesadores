{"name":"Proyecto-microprocesadores","tagline":"Proyecto Final Microprocesadores (Línea de Profundización Telecomunicaciones)","body":"### Bienvenido a la documentación referente al proyecto final del área de microprocesadores.\r\nEn este informe se mostraran los códigos implementados para las librerías, con el fin de lograr cumplir con los objetivos del proyecto, también se mostrara al final el código completo. \r\n\r\n### Propósito del Proyecto\r\nEl propósito general del presente proyecto consiste en realizar la transmisión de datos análogos mediante dos microprocesadores ATMEL, para esto fue necesaria la implementacion de distintos algoritmos (los cuales se presentaran mas adelante), tales como la codificación de Hamming, la decodificacion, la modulacion y demodulacion.\r\n\r\n### Codificación Hamming\r\nLa codificación o código Hamming consiste en inyectarle bits de redundancia al mensaje, cumpliendo con la ley de  Paridad que consiste en agregar bits de paridad  que indique si el número de los bits de valor 1 en los datos presentes es par o impar, esto con el fin que el mensaje llegue con la menor cantidad de errores posibles.\r\n\r\nEn el código se muestra como se utilizan unas ecuaciones generadas desde el mismo proceso de codificación, dichas formulas permiten determinar, mediante una suma algebraica simple, si la paridad es par o impar. Para el caso del proyecto fue utilizada la paridad par, por lo tanto se realizan comparaciones entre el modulo del valor  generado mediante la suma y el valor 0, determinando si el valor de la paridad es 1 o 0, para luego así juntar los valores de paridad y los datos para al fin generar el mensaje codificado. \r\n\r\n### Decodificacion Hamming\r\nLa decodificacion Hamming consiste en detectar, mediante la paridad (par o impar), errores posibles en el código recibido, también corrige dichos errores.\r\n\r\nPara la corrección de errores, se es utilizado un conjunto de ecuaciones (encontradas durante el proceso de diseño del proyecto), las cuales permiten mediante comparaciones simples determinar en que paridad y/o dato se ha producido un error, para luego realizando comparaciones cambiar dicho bit por el opuesto.\r\n\r\n\r\n\r\n###[Vídeo envío de datos por medio de arduino](https://www.youtube.com/watch?v=ow4kUFvyeJY&feature=youtu.be)\r\n\r\n\r\n\r\n### Código Completo","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}